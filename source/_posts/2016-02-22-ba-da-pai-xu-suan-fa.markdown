---
layout: post
title: "八大排序算法"
date: 2016-02-22 11:46:54 +0800
comments: true
categories: 
---
####插入排序：直接插入排序、希尔排序

######1、插入排序

效率：

稳定

空间复杂度O(1)

时间复杂度O(n2)

最差情况：反序，需要移动n*(n-1)/2个元素

最好情况：正序，不需要移动元素

数组在已排序或者是“近似排序”时，插入排序效率的最好情况运行时间为O(n)；

插入排序最坏情况运行时间和平均情况运行时间都为O(n²)。

通常，插入排序呈现出二次排序算法中的最佳性能。

对于具有较少元素（如n<=15）的列表来说，二次算法十分有效。

在列表已被排序时，插入排序是线性算法O(n)。

在列表“近似排序”时，插入排序仍然是线性算法。

在列表的许多元素已位于正确的位置上时，就会出现“近似排序”的条件。

通过使用O(nlog2n)效率的算法（如快速排序）对数组进行部分排序，

然后再进行选择排序，某些高级的排序算法就是这样实现的。 

######2、希尔排序


####选择排序：简单的选择排序、堆排序

######1、选择排序

######2、堆排序

交换排序：冒泡排序、快速排序

######1、冒泡排序

######2、快速排序

####归并排序

####基数排序

当n较大，则应采用时间复杂度为O(nlogn)的排序方法：`快速排序、堆排序或归并排序`

快速排序：是目前基于比较的内部排序中被认为是最好的方法，当待排序的关键字是`随机分布`时，快速排序的`平均时间最短`；